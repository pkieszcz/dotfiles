"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
"                                                                              "
"                       __   _ _ _ __ ___  _ __ ___                            "
"                       \ \ / / | '_ ` _ \| '__/ __|                           "
"                        \ V /| | | | | | | | | (__                            "
"                         \_/ |_|_| |_| |_|_|  \___|                           "
"                                                                              "
"                                                                              "
"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

" Be iMproved
set nocompatible

" check whether vim-plug is installed and install it if necessary
let plugpath = expand('<sfile>:p:h'). '/autoload/plug.vim'
if !filereadable(plugpath)
    if executable('curl')
        let plugurl = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
        call system('curl -fLo ' . shellescape(plugpath) . ' --create-dirs ' . plugurl)
        if v:shell_error
            echom "Error downloading vim-plug. Please install it manually.\n"
            exit
        endif
    else
        echom "vim-plug not installed. Please install it manually or install curl.\n"
        exit
    endif
endif
" set the runtime path to include Vundle and initialize
call plug#begin('~/.vim/plugged')

"-------------------=== Code/Project navigation ===-------------
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'majutsushi/tagbar'

"-------------------=== Colors ===------------------------------
Plug 'mhartington/oceanic-next'

"-------------------=== Airline ===-----------------------------
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

"-------------------=== Lint ===--------------------------------
Plug 'w0rp/ale'

"-------------------=== Git ===---------------------------------
Plug 'tpope/vim-fugitive'
Plug 'mhinz/vim-signify'
Plug 'airblade/vim-gitgutter'

"-------------------=== Other ===-------------------------------
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
Plug 'scrooloose/nerdcommenter'
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/vim-easy-align'
Plug 'ntpeters/vim-better-whitespace'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'Yggdroot/indentLine'
Plug 'adelarsq/vim-matchit'
Plug 'luochen1990/rainbow'
Plug 'tpope/vim-surround'
Plug 'easymotion/vim-easymotion'
Plug 'wikitopian/hardmode'
Plug 'Shougo/neosnippet'
Plug 'Shougo/neosnippet-snippets'
Plug 'sebosp/vim-snippets-terraform'
"-------------------=== Languages ===---------------------------
Plug 'sheerun/vim-polyglot'
Plug 'hashivim/vim-hashicorp-tools'
Plug 'm-kat/aws-vim'
Plug 'fatih/vim-go'

"-------------------=== Python ===------------------------------
Plug 'fs111/pydoc.vim'

"-------------------=== Terraform ===---------------------------
Plug 'hashivim/vim-terraform'
" All of your Plugs must be added before the following line
call plug#end()

filetype plugin indent on    " required
filetype plugin on

"=====================================================
"" General settings
"=====================================================
set secure                           " Security
set modelines=0

syntax on                            " syntax highlight
set nobackup
set noswapfile

set t_Co=256                         " set 256 colors
set background=dark                  " background

if (has('termguicolors'))
  set termguicolors
endif

let base16colorspace=256             " Access colors present in 256 colorspace
colorscheme OceanicNext              "set color scheme

set clipboard^=unnamed,unnamedplus   " use system clipboard

set relativenumber number            " show hybrid line number
set history=10000                    " how many lines of history VIM has to remember
set report=0                         " always show report messages

set ttyfast                          " terminal acceleration
set lazyredraw

set backspace=indent,eol,start       " OSX stupid backspace fix

set encoding=utf-8                   " utf-8 by default"

set autoread                         "Automatically re-read file if a change was detected outside of vim
set magic
set title

set novisualbell
set noerrorbells

set nowrap
set showcmd
set noshowmode

" Force saving files that require root permission
cnoremap w!! w !sudo tee > /dev/null %

inoremap jk <ESC>
"=====================================================
"" Search settings
"=====================================================
set hlsearch                    " highlight searches
set incsearch                   " incremental searches as we type
set smartcase                   " no ignorecase if Uppercase char present
set ignorecase                  " ignore case when searching"

"=====================================================
"" CursorLine
"=====================================================
set cursorline
set cursorcolumn
hi CursorLine cterm=underline gui=underline

"=====================================================
"" Split settings
"=====================================================
set splitbelow
set splitright

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za

" Split movment with Crtl-h/j/k/l
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"=====================================================
"" Tabs settings
"=====================================================
set tabstop=4
set shiftwidth=4
set smarttab
set expandtab

"=====================================================
"" Python settings
"=====================================================
let g:python_host_prog = '/Users/pkieszcz/.pyenv/versions/neovim2/bin/python'
let g:python3_host_prog = '/Users/pkieszcz/.pyenv/versions/neovim3/bin/python'

au BufNewFile,BufRead *.py set tabstop=4 softtabstop=4 shiftwidth=4 textwidth=79 expandtab autoindent fileformat=unix
" 80 and 120 char limit
let &colorcolumn=join(range(81,999),',')
highlight colorcolumn ctermbg=236 guibg=#212121
let &colorcolumn='80,'.join(range(120,999),',')

"==============================================================================
"" Plugins config
"==============================================================================

"=====================================================
"" scrooloose/nerdtree
"=====================================================
let NERDTreeIgnore=['\~$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']

" Open NERDTree on startup
autocmd VimEnter * if !argc() | NERDTree | endif
"autocmd VimEnter * NERDTree
"autocmd VimEnter * wincmd p

" Close vim if NERDtree if there is no files
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" Bind Ctrl-n to toggle
map <C-n> :NERDTreeToggle<CR>

let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1
let g:NerdTreeStatusline = ''
"=====================================================
"" Xuyuanp/nerdtree-git-plugin
"=====================================================
let g:NERDTreeIndicatorMapCustom = {
    \ 'Modified'  : '✹',
    \ 'Staged'    : '✚',
    \ 'Untracked' : '✭',
    \ 'Renamed'   : '➜',
    \ 'Unmerged'  : '═',
    \ 'Deleted'   : '✖',
    \ 'Dirty'     : '✗',
    \ 'Clean'     : '✔︎',
    \ 'Ignored'   : '☒',
    \ 'Unknown'   : '?'
    \ }

"=====================================================
"" majutsushi/tagbar
"=====================================================
let g:tagbar_usearrows = 1
nmap <F8> :TagbarToggle<CR>
"autocmd VimEnter * TagbarOpen

"=====================================================
"" shougo/deoplete.nvim
"=====================================================
let g:deoplete#omni_patterns = {}
let g:deoplete#enable_smart_case = 1
let g:deoplete#omni_patterns.terraform = '[^ *\t"{=$]\w*'
let g:deoplete#enable_at_startup = 1
call deoplete#initialize()

let g:deoplete#sources#syntax#min_keyword_length = 2

inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"
autocmd FileType javascript nnoremap <silent> <buffer> gb :TernDef<CR>

"=====================================================
"" vim-airline/vim-airline
"=====================================================
let g:airline_theme                        = 'space'
let g:airline#extensions#branch#enable     = 1
let g:airline#extensions#ale#enabled       = 1
let g:airline#extensions#bufferline#enabled= 1
let g:hybrid_custom_term_colors = 1
let g:hybrid_reduced_contrast = 1
let g:airline#extensions#default#layout = [['a', 'b', 'c'], ['z', 'warning', 'error']]
let g:airline_section_b = airline#section#create_left(['branch'])
let g:airline_section_z = airline#section#create(['linenr'])
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_exclude_preview = 1

"=====================================================
"" 'w0rp/ale'
"=====================================================
let g:ale_set_loclist = 1
let g:ale_open_list = 1
let g:ale_list_window_size = 6
let g:ale_sign_column_always = 1
let g:ale_sign_error = '⁉'
let g:ale_sign_warning = '•'
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_virtualenv_dir_names = []
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_save = 1
let g:ale_lint_on_enter = 1

"=====================================================
"" 'airblade/vim-gitgutter'
"=====================================================
let g:gitgutter_override_sign_column_highlight = 1

"=====================================================
"" 'SirVer/ultisnips'
"=====================================================
let g:UltiSnipsExpandTrigger='<tab>'
let g:UltiSnipsJumpForwardTrigger='<c-b>'
let g:UltiSnipsJumpBackwardTrigger='<c-z>'

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit='vertical'

let g:ale_python_flake8_args='--ignore=E501,E402,F403'

" Disable Arrow keys in Escape mode
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" Disable Arrow keys in Insert mode
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

let g:rainbow_active = 1

let g:terraform_fmt_on_save=1
let g:terraform_align=1

