"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
"                                                                              "
"                       __   _ _ _ __ ___  _ __ ___                            "
"                       \ \ / / | '_ ` _ \| '__/ __|                           "
"                        \ V /| | | | | | | | | (__                            "
"                         \_/ |_|_| |_| |_|_|  \___|                           "
"                                                                              "
"                                                                              "
"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

" Be iMproved
set nocompatible

"=====================================================
"" Vundle settings
"=====================================================
filetype off                 " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"-------------------=== Code/Project navigation ===-------------
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'majutsushi/tagbar'

"-------------------=== Colors ===------------------------------
Plugin 'flazz/vim-colorschemes'
Plugin 'altercation/vim-colors-solarized'
Plugin 'joshdick/onedark.vim'
Plugin 'ajh17/Spacegray.vim'

"-------------------=== Airline ===-----------------------------
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

"-------------------=== Lint ===--------------------------------
Plugin 'w0rp/ale'

"-------------------=== Git ===---------------------------------
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

"-------------------=== Other ===-------------------------------
Plugin 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plugin 'scrooloose/nerdcommenter'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'jiangmiao/auto-pairs'
Plugin 'junegunn/vim-easy-align'
Plugin 'zchee/deoplete-jedi'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'gilsondev/searchtasks.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'fisadev/vim-ctrlp-cmdpalette'
Plugin 'fisadev/FixedTaskList.vim'
Plugin 'mileszs/ack.vim'
Plugin 'junegunn/fzf.vim'

"-------------------=== Languages ===---------------------------
Plugin 'sheerun/vim-polyglot'
Plugin 'hashivim/vim-hashicorp-tools'
Plugin 'm-kat/aws-vim'

"-------------------=== Python ===------------------------------
Plugin 'fs111/pydoc.vim'

"
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
filetype plugin on

"=====================================================
"" General settings
"=====================================================
set secure                           " Security
set modelines=0

syntax on                            " syntax highlight
set nobackup

set t_Co=256                         " set 256 colors
set background=dark                  " background

if (has("termguicolors"))
  set termguicolors
endif

let base16colorspace=256             " Access colors present in 256 colorspace
colorscheme onedark                  " set color scheme

set clipboard^=unnamed,unnamedplus   " use system clipboard

set number                           " show line number
set history=10000                    " how many lines of history VIM has to remember
set report=0                         " always show report messages

set ttyfast                          " terminal acceleration
set lazyredraw

set backspace=indent,eol,start       " OSX stupid backspace fix

set encoding=utf-8                   " utf-8 by default"

set magic
set title

set novisualbell
set noerrorbells

set nowrap
set showcmd
set showmode

" Force saving files that require root permission
cnoremap w!! w !sudo tee > /dev/null %

"=====================================================
"" Search settings
"=====================================================
set hlsearch                    " highlight searches
set incsearch                   " incremental searches as we type
set smartcase                   " no ignorecase if Uppercase char present
set ignorecase                  " ignore case when searching"

"=====================================================
"" CursorLine
"=====================================================
set cursorline
set cursorcolumn
hi CursorLine cterm=underline gui=underline

"=====================================================
"" Split settings
"=====================================================
set splitbelow
set splitright

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za

" Split movment with Crtl-h/j/k/l
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"=====================================================
"" Tabs settings
"=====================================================
set tabstop=4
set shiftwidth=4
set smarttab
set expandtab

"=====================================================
"" Python settings
"=====================================================
let g:python_host_prog = '/Users/pkieszcz/.pyenv/versions/neovim2/bin/python'
let g:python3_host_prog = '/Users/pkieszcz/.pyenv/versions/neovim3/bin/python'

au BufNewFile,BufRead *.py set tabstop=4 softtabstop=4 shiftwidth=4 textwidth=79 expandtab autoindent fileformat=unix
" 80 and 120 char limit
let &colorcolumn=join(range(81,999),",")
highlight colorcolumn ctermbg=236 guibg=#2c323c
let &colorcolumn="80,".join(range(120,999),",")

"==============================================================================
"" Plugins config
"==============================================================================

"=====================================================
"" scrooloose/nerdtree
"=====================================================
let NERDTreeIgnore=['\~$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']

" Open NERDTree on startup
autocmd VimEnter * if !argc() | NERDTree | endif
"autocmd VimEnter * NERDTree
"autocmd VimEnter * wincmd p

" Close vim if NERDtree if there is no files
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" Bind Ctrl-n to toggle
map <C-n> :NERDTreeToggle<CR>

let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

"=====================================================
"" Xuyuanp/nerdtree-git-plugin
"=====================================================
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }

"=====================================================
"" majutsushi/tagbar
"=====================================================
let g:tagbar_usearrows = 1
nmap <F8> :TagbarToggle<CR>
"autocmd VimEnter * TagbarOpen

"=====================================================
"" shougo/deoplete.nvim
"=====================================================
let g:deoplete#enable_at_startup = 1

"=====================================================
"" vim-airline/vim-airline
"=====================================================
let g:airline_theme                        = 'onedark'
let g:airline#extensions#branch#enable     = 1
let g:airline#extensions#ale#enabled       = 1
let g:airline#extensions#bufferline#enabled= 1
let g:hybrid_custom_term_colors = 1
let g:hybrid_reduced_contrast = 1

"=====================================================
"" 'w0rp/ale'
"=====================================================
let g:ale_set_loclist = 1
let g:ale_open_list = 1
let g:ale_list_window_size = 6
let g:ale_sign_column_always = 1
let g:ale_linters = { 'python': ['flake8'], }
let b:ale_fixers = { 'python': ['yapf'] }
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

"=====================================================
"" 'airblade/vim-gitgutter'
"=====================================================
let g:gitgutter_override_sign_column_highlight = 1

"=====================================================
"" 'SirVer/ultisnips'
"=====================================================
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
